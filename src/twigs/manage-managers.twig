{% extends 'base.twig' %}

{% from 'utils.twig' import multipleselect %}

{% block page_title %}管理员管理{% endblock %}

{% block main_content %}
    <div class="row">
        <div class="col-md-12">
            <div class="lead">
                <h3>{{ '<<管理员管理>>' }}</h3>
            </div>
        </div>
        <div class="col-md-12">
            <p class="text-right"><button class="btn btn-primary" onclick="editManager({})">New</button></p>
        </div>
        <div class="col-md-12">
            <table class="table table-striped table-condensed">
                <tr>
                    <th class="text-center">Username</th>
                    <th>Note</th>
                    <th>Super Admin</th>
                    <th>Updated At</th>
                    <th>Groups</th>
                    <th>Operation</th>
                </tr>
                {% for manager in managers %}
                <tr data-name="{{ manager.name }}">
                    <td class="text-center">{{ manager.name }}</td>
                    <td>{{ manager.note|default('无备注') }}</td>
                    <td>{{ manager.sadmin ? 'YES.' : 'NOT.' }}</td>
                    <td>{{ manager.updatedAt.iso }}</td>
                    <td>{{ manager.sadmin ? 'ALL' : multipleselect(groups, 'gid', 'gname', manager.groups) }}</td>
                    <td>
                        <button class="btn btn-default btn-xs" onclick="editManager({{ manager|json_encode }})">编辑</button>
                    </td>
                </tr>
                {% endfor %}
            </table>
        </div>
    </div>
    <div id="manager-edit-form" style="display: none">
        <div class="container">
        <div class="row">
            <div class="col-md-6">
            <form action="/ajax/manage/manager">
                <div class="form-group">
                  <label for="name">Username</label>
                  <input type="text" class="form-control" name="name" id="name" placeholder="letters, digits or underlines">
                </div>
                <div class="form-group">
                    <label for="pass">Password</label>
                    <input data-toggle="password" id="pass" name="pass" class="form-control" type="password" placeholder="letters, digits or underlines. Let it empty if no need to modify.">
                </div>
                <div class="form-group">
                  <label for="note">Note</label>
                  <input type="text" class="form-control" name="note" id="note" placeholder="as you like.">
                </div>
                <div class="form-group">
                  <label for="gname">Super Admin</label>
                  <label class="radio-inline">
                    <input type="radio" name="sadmin" id="closed-true" value="1"> Yes.
                  </label>
                  <label class="radio-inline">
                    <input type="radio" name="sadmin" id="closed-false" value="0"> No.
                  </label>
                </div>
            </form>
            </div>
        </div>
    </div>
    </div>
{% endblock %}

{% block page_link %}
    {{ parent() }}
    <link href="//cdn.bootcss.com/bootstrap-multiselect/0.9.13/css/bootstrap-multiselect.css" rel="stylesheet">
{% endblock %}

{% block page_script_src %}
    {{ parent() }}
    <script src="//cdn.bootcss.com/layer/3.1.0/layer.js"></script>
    <script src="//cdn.bootcss.com/bootstrap-multiselect/0.9.13/js/bootstrap-multiselect.min.js"></script>
    <script src="https://cdn.bootcss.com/bootstrap-show-password/1.1.2/bootstrap-show-password.min.js"></script>
{% endblock %}

{% block page_script %}
{{ parent() }}
$(function(){
    $('select[multiple=multiple]').multiselect({
        buttonWidth: '200px',
        dropRight: true,
        enableFiltering: true,
        includeSelectAllOption: true,
        maxHeight: 400,
        enableClickableOptGroups: true,
        onChange: function(option, checked) {
            var gid = $(option).val();
            var username = $(option).parents('tr').attr('data-name');
            submitManagerGroup(username, checked, gid);
        }
    });
});

function submitManagerGroup(username, checked, gid) {
    $.ajax({
        data: {username: username, gid: gid},
        type: 'POST',
        url: '/ajax/manage/manager/group/' + (checked ? 'add' : 'remove'),
        dataType: 'json'
    });
}

function submitEditManager($form, layerindex) {
    var url = $form.attr('action'), data = $form.serialize(), ret;
    console.log(url, data);
    $.ajax({
        data: data,
        type: 'POST',
        url: url,
        dataType: 'json',
        success: function(data) {
            if (!data.ok) {
                alert(data.msg);
            }
            else {
                layer.close(layerindex);
                location.reload();
            }
        }
    });
    return true;
}
function editManager(mgr) {
    var is_new = !mgr.name;
    $('#manager-edit-form [name=name]').val(mgr.name).attr('readonly', !is_new);
    $('#manager-edit-form [name=pass]').val("");
    $('#manager-edit-form [name=note]').val(mgr.note);
    $('#manager-edit-form [name=sadmin][value=' + (mgr.sadmin ? 1 : 0) + ']').click();

    var title = is_new ? 'Creating Manager' : 'Editing Manager';
    layer.open({
      type: 1,
      shade: true,
      title: title,
      area: '600px',
      content: $('#manager-edit-form'),
      btn: ['Submit'],
      yes: function(index, layero) {
          submitEditManager($('form', layero), index);
      }
    });
}
{% endblock %}